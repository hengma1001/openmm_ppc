<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classOpenMM_1_1DrudeSCFIntegrator" kind="class" prot="public">
    <compoundname>OpenMM::DrudeSCFIntegrator</compoundname>
    <basecompoundref refid="classOpenMM_1_1Integrator" prot="public" virt="non-virtual">OpenMM::Integrator</basecompoundref>
    <includes refid="DrudeSCFIntegrator_8h" local="no">DrudeSCFIntegrator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classOpenMM_1_1DrudeSCFIntegrator_1abe5323d65c34a2642fe02db46c01247b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double OpenMM::DrudeSCFIntegrator::tolerance</definition>
        <argsstring></argsstring>
        <name>tolerance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="107" column="1" bodyfile="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classOpenMM_1_1DrudeSCFIntegrator_1a1fe599db41c71276eca0adf9f5f0b3b7" prot="private" static="no" mutable="no">
        <type>Kernel</type>
        <definition>Kernel OpenMM::DrudeSCFIntegrator::kernel</definition>
        <argsstring></argsstring>
        <name>kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="108" column="1" bodyfile="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a367cfa2c858fb913f8ed6806144761f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenMM::DrudeSCFIntegrator::DrudeSCFIntegrator</definition>
        <argsstring>(double stepSize)</argsstring>
        <name>DrudeSCFIntegrator</name>
        <param>
          <type>double</type>
          <declname>stepSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a <ref refid="classOpenMM_1_1DrudeSCFIntegrator" kindref="compound">DrudeSCFIntegrator</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the step size with which to integrator the system (in picoseconds) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a6b8eac8f8023908249d1c150ba474197" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double OpenMM::DrudeSCFIntegrator::getMinimizationErrorTolerance</definition>
        <argsstring>() const </argsstring>
        <name>getMinimizationErrorTolerance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the error tolerance to use when minimizing the potential energy. This roughly corresponds to the maximum allowed force magnitude on the Drude particles after minimization.</para><para><simplesect kind="return"><para>the error tolerance to use, measured in kJ/mol/nm </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="64" column="1" bodyfile="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a4860e0fa8245a8f3973738892d582090" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::setMinimizationErrorTolerance</definition>
        <argsstring>(double tol)</argsstring>
        <name>setMinimizationErrorTolerance</name>
        <param>
          <type>double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the error tolerance to use when minimizing the potential energy. This roughly corresponds to the maximum allowed force magnitude on the Drude particles after minimization.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>the error tolerance to use, measured in kJ/mol/nm </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="73" column="1" bodyfile="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a03722a16672c8e4d85ff0f4e80e323f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::step</definition>
        <argsstring>(int steps)</argsstring>
        <name>step</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a55151232664ae778eb2f0e2e8bbe7b67">step</reimplements>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advance a simulation through time by taking a series of time steps.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>steps</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of time steps to take </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="81" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a2f656a37b6a5c7d469d3fa8edafdfdd2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::initialize</definition>
        <argsstring>(ContextImpl &amp;context)</argsstring>
        <name>initialize</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a6a2b5bcc61b799be0a37b4a431bdcd7d">initialize</reimplements>
        <param>
          <type>ContextImpl &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is created. It informs the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> of what context it will be integrating, and gives it a chance to do any necessary initialization. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a321cddffff870e0e137b698b3b3222a7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a204f42ff795b94be55d0c9ba32261af6">cleanup</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This will be called by the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref> when it is destroyed to let the <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> do any necessary cleanup. It will also get called again if the application calls reinitialize() on the <ref refid="classOpenMM_1_1Context" kindref="compound">Context</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1ab0b910aa6448922e6071585cf7c4b51c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void OpenMM::DrudeSCFIntegrator::stateChanged</definition>
        <argsstring>(State::DataType changed)</argsstring>
        <name>stateChanged</name>
        <reimplements refid="classOpenMM_1_1Integrator_1aa41aa4c012de261afa5dda15af4fb721">stateChanged</reimplements>
        <param>
          <type><ref refid="classOpenMM_1_1State_1a33046c06dbd6c93b71cc5d1448771933" kindref="member">State::DataType</ref></type>
          <declname>changed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When the user modifies the state, we need to mark that the forces need to be recalculated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1a2302c7dfebd849eed4b04c81c54af10d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; OpenMM::DrudeSCFIntegrator::getKernelNames</definition>
        <argsstring>()</argsstring>
        <name>getKernelNames</name>
        <reimplements refid="classOpenMM_1_1Integrator_1ab27c6938ff637bef4d7478c90f687af4">getKernelNames</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the names of all Kernels used by this <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classOpenMM_1_1DrudeSCFIntegrator_1aa9551a2532397b3c9c1836c24d7127bc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double OpenMM::DrudeSCFIntegrator::computeKineticEnergy</definition>
        <argsstring>()</argsstring>
        <name>computeKineticEnergy</name>
        <reimplements refid="classOpenMM_1_1Integrator_1a0fd62d5846712eca58341556d48d991c">computeKineticEnergy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the kinetic energy of the system at the current time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a leap-frog Verlet <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> that simulates systems with Drude particles. It uses the self-consistent field (SCF) method: at every time step, the positions of Drude particles are adjusted to minimize the potential energy.</para><para>This <ref refid="classOpenMM_1_1Integrator" kindref="compound">Integrator</ref> requires the <ref refid="classOpenMM_1_1System" kindref="compound">System</ref> to include a <ref refid="classOpenMM_1_1DrudeForce" kindref="compound">DrudeForce</ref>, which it uses to identify the Drude particles. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="183">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
      </node>
      <node id="182">
        <label>OpenMM::DrudeSCFIntegrator</label>
        <link refid="classOpenMM_1_1DrudeSCFIntegrator"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="185">
        <label>OpenMM::Integrator</label>
        <link refid="classOpenMM_1_1Integrator"/>
        <childnode refid="186" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="184">
        <label>OpenMM::DrudeSCFIntegrator</label>
        <link refid="classOpenMM_1_1DrudeSCFIntegrator"/>
        <childnode refid="185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="186">
        <label>OpenMM::Context</label>
        <link refid="classOpenMM_1_1Context"/>
      </node>
    </collaborationgraph>
    <location file="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" line="50" column="1" bodyfile="/ccs/home/hm0/Pkgs/openmm/plugins/drude/openmmapi/include/openmm/DrudeSCFIntegrator.h" bodystart="50" bodyend="109"/>
    <listofallmembers>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a321cddffff870e0e137b698b3b3222a7" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>cleanup</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1aa9551a2532397b3c9c1836c24d7127bc" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>computeKineticEnergy</name></member>
      <member refid="classOpenMM_1_1Integrator_1ac9c1c07848ae2c2e8617a949a11070c1" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>context</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a367cfa2c858fb913f8ed6806144761f7" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>DrudeSCFIntegrator</name></member>
      <member refid="classOpenMM_1_1Integrator_1af1d179ae133e02c9334867c17c1402a5" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a2302c7dfebd849eed4b04c81c54af10d" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getKernelNames</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a6b8eac8f8023908249d1c150ba474197" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getMinimizationErrorTolerance</name></member>
      <member refid="classOpenMM_1_1Integrator_1a87a5e044e8da893758d07b9037c4c378" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>getStepSize</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a2f656a37b6a5c7d469d3fa8edafdfdd2" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>initialize</name></member>
      <member refid="classOpenMM_1_1Integrator_1a2732506bfb2afd8e2e9954d08cab1304" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>Integrator</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a1fe599db41c71276eca0adf9f5f0b3b7" prot="private" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>kernel</name></member>
      <member refid="classOpenMM_1_1Integrator_1ab3f6088553343feb8f47ab789e7a09a1" prot="protected" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>owner</name></member>
      <member refid="classOpenMM_1_1Integrator_1a47f81ac027670bcad6050c72cc41bd67" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setConstraintTolerance</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a4860e0fa8245a8f3973738892d582090" prot="public" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setMinimizationErrorTolerance</name></member>
      <member refid="classOpenMM_1_1Integrator_1a86ef00f4e3abb9e3e325e3c4ebe5ead1" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>setStepSize</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1ab0b910aa6448922e6071585cf7c4b51c" prot="protected" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>stateChanged</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1a03722a16672c8e4d85ff0f4e80e323f2" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>step</name></member>
      <member refid="classOpenMM_1_1DrudeSCFIntegrator_1abe5323d65c34a2642fe02db46c01247b" prot="private" virt="non-virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>tolerance</name></member>
      <member refid="classOpenMM_1_1Integrator_1a9abbef84d9e2c4e5a3d3139f8fa84fff" prot="public" virt="virtual"><scope>OpenMM::DrudeSCFIntegrator</scope><name>~Integrator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
